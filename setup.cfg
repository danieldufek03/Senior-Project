[metadata]
name = antikythera
summary = IMSI catcher detector
author = Derek Goddeau
author-email = dgodd001@odu.edu
license = gpl3
home-page = https://gitlab.com/finding-ray/antikythera
description-file = README.rst
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = Development Status :: 3 - Alpha,
              Environment :: X11 Applications,
              License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+),
              Natural Language :: English,
              Operating System :: OS Independent,
              Programming Language :: Python :: 3,
              Topic :: Security,
              Topic :: System :: Networking :: Monitoring

[entry_points]
# Add here console scripts like:
console_scripts =
    sonar = antikythera.cli:run
    fibonacci = antikythera.antikythera:run
# For example:
# console_scripts =
#     fibonacci = antikythera.skeleton:run
# as well as other entry_points.

[files]
# Add here 'data_files', 'packages' or 'namespace_packages'.
# Additional data files are defined as key value pairs of source and target:
packages =
    antikythera
# data_files =
#    share/antikythera_docs = docs/*

[extras]
# Add here additional requirements for extra features, like:
# PDF =
#    ReportLab>=1.2
#    RXP

[test]
# py.test options when running `python setup.py test`
addopts = tests
    --cov-report html
    --cov-report term
    --doctest-modules
    --cov antikythera
    --verbose

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov-report html:coverage.html
    --cov-report term
    --doctest-modules
    --cov antikythera
    --verbose

[aliases]
docs = build_sphinx

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[pbr]
# Let pbr run sphinx-apidoc
autodoc_tree_index_modules = True
# autodoc_tree_excludes = ...
# Let pbr itself generate the apidoc
# autodoc_index_modules = True
# autodoc_exclude_modules = ...
# Convert warnings to errors
# warnerrors = True

[devpi:upload]
# Options for the devpi: PyPI serer and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel
